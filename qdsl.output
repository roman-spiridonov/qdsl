Processing grammar.
$accept(0)
$end(1)
error(2)
program(3)
body(4)
var(5)
;(6)
function(7)
expr_stmt(8)
FUNCTION(9)
id(10)
((11)
params(12)
)(13)
{(14)
}(15)
VAR(16)
=(17)
expr(18)
RETURN(19)
params_nonempty(20)
,(21)
ID(22)
args(23)
args_nonempty(24)
+(25)
-(26)
*(27)
/(28)
<(29)
LE(30)
GE(31)
>(32)
EQ(33)
^(34)
INT_CONST(35)
BOOL_CONST(36)
STR_CONST(37)

Item sets
------

item set 0 
$accept -> .program $end #lookaheads= $end
program -> .body
body -> .var ;
body -> .body var ;
body -> .error ;
body -> .function
body -> .body function
body -> .expr_stmt ;
body -> .body expr_stmt ;
var -> .VAR id = expr
function -> .FUNCTION id ( params ) { body }
expr_stmt -> .
expr_stmt -> .expr
expr_stmt -> .RETURN expr
expr -> .id ( args )
expr -> .expr + expr
expr -> .expr - expr
expr -> .expr * expr
expr -> .expr / expr
expr -> .expr < expr
expr -> .expr LE expr
expr -> .expr GE expr
expr -> .expr > expr
expr -> .expr EQ expr
expr -> .expr ^ expr
expr -> .- expr
expr -> .INT_CONST
expr -> .BOOL_CONST
expr -> .STR_CONST
expr -> .id
id -> .ID 
transitions ->  {"program":1,"body":2,"var":3,"error":4,"function":5,"expr_stmt":6,"VAR":7,"FUNCTION":8,"expr":9,"RETURN":10,"id":11,"-":12,"INT_CONST":13,"BOOL_CONST":14,"STR_CONST":15,"ID":16}

item set 1 
$accept -> program .$end #lookaheads= $end 
transitions ->  {}

item set 2 
program -> body .
body -> body .var ;
body -> body .function
body -> body .expr_stmt ;
var -> .VAR id = expr
function -> .FUNCTION id ( params ) { body }
expr_stmt -> .
expr_stmt -> .expr
expr_stmt -> .RETURN expr
expr -> .id ( args )
expr -> .expr + expr
expr -> .expr - expr
expr -> .expr * expr
expr -> .expr / expr
expr -> .expr < expr
expr -> .expr LE expr
expr -> .expr GE expr
expr -> .expr > expr
expr -> .expr EQ expr
expr -> .expr ^ expr
expr -> .- expr
expr -> .INT_CONST
expr -> .BOOL_CONST
expr -> .STR_CONST
expr -> .id
id -> .ID 
transitions ->  {"var":17,"function":18,"expr_stmt":19,"VAR":7,"FUNCTION":8,"expr":9,"RETURN":10,"id":11,"-":12,"INT_CONST":13,"BOOL_CONST":14,"STR_CONST":15,"ID":16}

item set 3 
body -> var .; 
transitions ->  {";":20}

item set 4 
body -> error .; 
transitions ->  {";":21}

item set 5 
body -> function . 
transitions ->  {}

item set 6 
body -> expr_stmt .; 
transitions ->  {";":22}

item set 7 
var -> VAR .id = expr
id -> .ID 
transitions ->  {"id":23,"ID":16}

item set 8 
function -> FUNCTION .id ( params ) { body }
id -> .ID 
transitions ->  {"id":24,"ID":16}

item set 9 
expr_stmt -> expr .
expr -> expr .+ expr
expr -> expr .- expr
expr -> expr .* expr
expr -> expr ./ expr
expr -> expr .< expr
expr -> expr .LE expr
expr -> expr .GE expr
expr -> expr .> expr
expr -> expr .EQ expr
expr -> expr .^ expr 
transitions ->  {"+":25,"-":26,"*":27,"/":28,"<":29,"LE":30,"GE":31,">":32,"EQ":33,"^":34}

item set 10 
expr_stmt -> RETURN .expr
expr -> .id ( args )
expr -> .expr + expr
expr -> .expr - expr
expr -> .expr * expr
expr -> .expr / expr
expr -> .expr < expr
expr -> .expr LE expr
expr -> .expr GE expr
expr -> .expr > expr
expr -> .expr EQ expr
expr -> .expr ^ expr
expr -> .- expr
expr -> .INT_CONST
expr -> .BOOL_CONST
expr -> .STR_CONST
expr -> .id
id -> .ID 
transitions ->  {"expr":35,"id":11,"-":12,"INT_CONST":13,"BOOL_CONST":14,"STR_CONST":15,"ID":16}

item set 11 
expr -> id .( args )
expr -> id . 
transitions ->  {"(":36}

item set 12 
expr -> - .expr
expr -> .id ( args )
expr -> .expr + expr
expr -> .expr - expr
expr -> .expr * expr
expr -> .expr / expr
expr -> .expr < expr
expr -> .expr LE expr
expr -> .expr GE expr
expr -> .expr > expr
expr -> .expr EQ expr
expr -> .expr ^ expr
expr -> .- expr
expr -> .INT_CONST
expr -> .BOOL_CONST
expr -> .STR_CONST
expr -> .id
id -> .ID 
transitions ->  {"expr":37,"id":11,"-":12,"INT_CONST":13,"BOOL_CONST":14,"STR_CONST":15,"ID":16}

item set 13 
expr -> INT_CONST . 
transitions ->  {}

item set 14 
expr -> BOOL_CONST . 
transitions ->  {}

item set 15 
expr -> STR_CONST . 
transitions ->  {}

item set 16 
id -> ID . 
transitions ->  {}

item set 17 
body -> body var .; 
transitions ->  {";":38}

item set 18 
body -> body function . 
transitions ->  {}

item set 19 
body -> body expr_stmt .; 
transitions ->  {";":39}

item set 20 
body -> var ; . 
transitions ->  {}

item set 21 
body -> error ; . 
transitions ->  {}

item set 22 
body -> expr_stmt ; . 
transitions ->  {}

item set 23 
var -> VAR id .= expr 
transitions ->  {"=":40}

item set 24 
function -> FUNCTION id .( params ) { body } 
transitions ->  {"(":41}

item set 25 
expr -> expr + .expr
expr -> .id ( args )
expr -> .expr + expr
expr -> .expr - expr
expr -> .expr * expr
expr -> .expr / expr
expr -> .expr < expr
expr -> .expr LE expr
expr -> .expr GE expr
expr -> .expr > expr
expr -> .expr EQ expr
expr -> .expr ^ expr
expr -> .- expr
expr -> .INT_CONST
expr -> .BOOL_CONST
expr -> .STR_CONST
expr -> .id
id -> .ID 
transitions ->  {"expr":42,"id":11,"-":12,"INT_CONST":13,"BOOL_CONST":14,"STR_CONST":15,"ID":16}

item set 26 
expr -> expr - .expr
expr -> .id ( args )
expr -> .expr + expr
expr -> .expr - expr
expr -> .expr * expr
expr -> .expr / expr
expr -> .expr < expr
expr -> .expr LE expr
expr -> .expr GE expr
expr -> .expr > expr
expr -> .expr EQ expr
expr -> .expr ^ expr
expr -> .- expr
expr -> .INT_CONST
expr -> .BOOL_CONST
expr -> .STR_CONST
expr -> .id
id -> .ID 
transitions ->  {"expr":43,"id":11,"-":12,"INT_CONST":13,"BOOL_CONST":14,"STR_CONST":15,"ID":16}

item set 27 
expr -> expr * .expr
expr -> .id ( args )
expr -> .expr + expr
expr -> .expr - expr
expr -> .expr * expr
expr -> .expr / expr
expr -> .expr < expr
expr -> .expr LE expr
expr -> .expr GE expr
expr -> .expr > expr
expr -> .expr EQ expr
expr -> .expr ^ expr
expr -> .- expr
expr -> .INT_CONST
expr -> .BOOL_CONST
expr -> .STR_CONST
expr -> .id
id -> .ID 
transitions ->  {"expr":44,"id":11,"-":12,"INT_CONST":13,"BOOL_CONST":14,"STR_CONST":15,"ID":16}

item set 28 
expr -> expr / .expr
expr -> .id ( args )
expr -> .expr + expr
expr -> .expr - expr
expr -> .expr * expr
expr -> .expr / expr
expr -> .expr < expr
expr -> .expr LE expr
expr -> .expr GE expr
expr -> .expr > expr
expr -> .expr EQ expr
expr -> .expr ^ expr
expr -> .- expr
expr -> .INT_CONST
expr -> .BOOL_CONST
expr -> .STR_CONST
expr -> .id
id -> .ID 
transitions ->  {"expr":45,"id":11,"-":12,"INT_CONST":13,"BOOL_CONST":14,"STR_CONST":15,"ID":16}

item set 29 
expr -> expr < .expr
expr -> .id ( args )
expr -> .expr + expr
expr -> .expr - expr
expr -> .expr * expr
expr -> .expr / expr
expr -> .expr < expr
expr -> .expr LE expr
expr -> .expr GE expr
expr -> .expr > expr
expr -> .expr EQ expr
expr -> .expr ^ expr
expr -> .- expr
expr -> .INT_CONST
expr -> .BOOL_CONST
expr -> .STR_CONST
expr -> .id
id -> .ID 
transitions ->  {"expr":46,"id":11,"-":12,"INT_CONST":13,"BOOL_CONST":14,"STR_CONST":15,"ID":16}

item set 30 
expr -> expr LE .expr
expr -> .id ( args )
expr -> .expr + expr
expr -> .expr - expr
expr -> .expr * expr
expr -> .expr / expr
expr -> .expr < expr
expr -> .expr LE expr
expr -> .expr GE expr
expr -> .expr > expr
expr -> .expr EQ expr
expr -> .expr ^ expr
expr -> .- expr
expr -> .INT_CONST
expr -> .BOOL_CONST
expr -> .STR_CONST
expr -> .id
id -> .ID 
transitions ->  {"expr":47,"id":11,"-":12,"INT_CONST":13,"BOOL_CONST":14,"STR_CONST":15,"ID":16}

item set 31 
expr -> expr GE .expr
expr -> .id ( args )
expr -> .expr + expr
expr -> .expr - expr
expr -> .expr * expr
expr -> .expr / expr
expr -> .expr < expr
expr -> .expr LE expr
expr -> .expr GE expr
expr -> .expr > expr
expr -> .expr EQ expr
expr -> .expr ^ expr
expr -> .- expr
expr -> .INT_CONST
expr -> .BOOL_CONST
expr -> .STR_CONST
expr -> .id
id -> .ID 
transitions ->  {"expr":48,"id":11,"-":12,"INT_CONST":13,"BOOL_CONST":14,"STR_CONST":15,"ID":16}

item set 32 
expr -> expr > .expr
expr -> .id ( args )
expr -> .expr + expr
expr -> .expr - expr
expr -> .expr * expr
expr -> .expr / expr
expr -> .expr < expr
expr -> .expr LE expr
expr -> .expr GE expr
expr -> .expr > expr
expr -> .expr EQ expr
expr -> .expr ^ expr
expr -> .- expr
expr -> .INT_CONST
expr -> .BOOL_CONST
expr -> .STR_CONST
expr -> .id
id -> .ID 
transitions ->  {"expr":49,"id":11,"-":12,"INT_CONST":13,"BOOL_CONST":14,"STR_CONST":15,"ID":16}

item set 33 
expr -> expr EQ .expr
expr -> .id ( args )
expr -> .expr + expr
expr -> .expr - expr
expr -> .expr * expr
expr -> .expr / expr
expr -> .expr < expr
expr -> .expr LE expr
expr -> .expr GE expr
expr -> .expr > expr
expr -> .expr EQ expr
expr -> .expr ^ expr
expr -> .- expr
expr -> .INT_CONST
expr -> .BOOL_CONST
expr -> .STR_CONST
expr -> .id
id -> .ID 
transitions ->  {"expr":50,"id":11,"-":12,"INT_CONST":13,"BOOL_CONST":14,"STR_CONST":15,"ID":16}

item set 34 
expr -> expr ^ .expr
expr -> .id ( args )
expr -> .expr + expr
expr -> .expr - expr
expr -> .expr * expr
expr -> .expr / expr
expr -> .expr < expr
expr -> .expr LE expr
expr -> .expr GE expr
expr -> .expr > expr
expr -> .expr EQ expr
expr -> .expr ^ expr
expr -> .- expr
expr -> .INT_CONST
expr -> .BOOL_CONST
expr -> .STR_CONST
expr -> .id
id -> .ID 
transitions ->  {"expr":51,"id":11,"-":12,"INT_CONST":13,"BOOL_CONST":14,"STR_CONST":15,"ID":16}

item set 35 
expr_stmt -> RETURN expr .
expr -> expr .+ expr
expr -> expr .- expr
expr -> expr .* expr
expr -> expr ./ expr
expr -> expr .< expr
expr -> expr .LE expr
expr -> expr .GE expr
expr -> expr .> expr
expr -> expr .EQ expr
expr -> expr .^ expr 
transitions ->  {"+":25,"-":26,"*":27,"/":28,"<":29,"LE":30,"GE":31,">":32,"EQ":33,"^":34}

item set 36 
expr -> id ( .args )
args -> .
args -> .args_nonempty
args_nonempty -> .expr
args_nonempty -> .args , expr
expr -> .id ( args )
expr -> .expr + expr
expr -> .expr - expr
expr -> .expr * expr
expr -> .expr / expr
expr -> .expr < expr
expr -> .expr LE expr
expr -> .expr GE expr
expr -> .expr > expr
expr -> .expr EQ expr
expr -> .expr ^ expr
expr -> .- expr
expr -> .INT_CONST
expr -> .BOOL_CONST
expr -> .STR_CONST
expr -> .id
id -> .ID 
transitions ->  {"args":52,"args_nonempty":53,"expr":54,"id":11,"-":12,"INT_CONST":13,"BOOL_CONST":14,"STR_CONST":15,"ID":16}

item set 37 
expr -> - expr .
expr -> expr .+ expr
expr -> expr .- expr
expr -> expr .* expr
expr -> expr ./ expr
expr -> expr .< expr
expr -> expr .LE expr
expr -> expr .GE expr
expr -> expr .> expr
expr -> expr .EQ expr
expr -> expr .^ expr 
transitions ->  {"+":25,"-":26,"*":27,"/":28,"<":29,"LE":30,"GE":31,">":32,"EQ":33,"^":34}

item set 38 
body -> body var ; . 
transitions ->  {}

item set 39 
body -> body expr_stmt ; . 
transitions ->  {}

item set 40 
var -> VAR id = .expr
expr -> .id ( args )
expr -> .expr + expr
expr -> .expr - expr
expr -> .expr * expr
expr -> .expr / expr
expr -> .expr < expr
expr -> .expr LE expr
expr -> .expr GE expr
expr -> .expr > expr
expr -> .expr EQ expr
expr -> .expr ^ expr
expr -> .- expr
expr -> .INT_CONST
expr -> .BOOL_CONST
expr -> .STR_CONST
expr -> .id
id -> .ID 
transitions ->  {"expr":55,"id":11,"-":12,"INT_CONST":13,"BOOL_CONST":14,"STR_CONST":15,"ID":16}

item set 41 
function -> FUNCTION id ( .params ) { body }
params -> .
params -> .params_nonempty
params_nonempty -> .id
params_nonempty -> .params_nonempty , id
id -> .ID 
transitions ->  {"params":56,"params_nonempty":57,"id":58,"ID":16}

item set 42 
expr -> expr + expr .
expr -> expr .+ expr
expr -> expr .- expr
expr -> expr .* expr
expr -> expr ./ expr
expr -> expr .< expr
expr -> expr .LE expr
expr -> expr .GE expr
expr -> expr .> expr
expr -> expr .EQ expr
expr -> expr .^ expr 
transitions ->  {"+":25,"-":26,"*":27,"/":28,"<":29,"LE":30,"GE":31,">":32,"EQ":33,"^":34}

item set 43 
expr -> expr - expr .
expr -> expr .+ expr
expr -> expr .- expr
expr -> expr .* expr
expr -> expr ./ expr
expr -> expr .< expr
expr -> expr .LE expr
expr -> expr .GE expr
expr -> expr .> expr
expr -> expr .EQ expr
expr -> expr .^ expr 
transitions ->  {"+":25,"-":26,"*":27,"/":28,"<":29,"LE":30,"GE":31,">":32,"EQ":33,"^":34}

item set 44 
expr -> expr * expr .
expr -> expr .+ expr
expr -> expr .- expr
expr -> expr .* expr
expr -> expr ./ expr
expr -> expr .< expr
expr -> expr .LE expr
expr -> expr .GE expr
expr -> expr .> expr
expr -> expr .EQ expr
expr -> expr .^ expr 
transitions ->  {"+":25,"-":26,"*":27,"/":28,"<":29,"LE":30,"GE":31,">":32,"EQ":33,"^":34}

item set 45 
expr -> expr / expr .
expr -> expr .+ expr
expr -> expr .- expr
expr -> expr .* expr
expr -> expr ./ expr
expr -> expr .< expr
expr -> expr .LE expr
expr -> expr .GE expr
expr -> expr .> expr
expr -> expr .EQ expr
expr -> expr .^ expr 
transitions ->  {"+":25,"-":26,"*":27,"/":28,"<":29,"LE":30,"GE":31,">":32,"EQ":33,"^":34}

item set 46 
expr -> expr < expr .
expr -> expr .+ expr
expr -> expr .- expr
expr -> expr .* expr
expr -> expr ./ expr
expr -> expr .< expr
expr -> expr .LE expr
expr -> expr .GE expr
expr -> expr .> expr
expr -> expr .EQ expr
expr -> expr .^ expr 
transitions ->  {"+":25,"-":26,"*":27,"/":28,"<":29,"LE":30,"GE":31,">":32,"EQ":33,"^":34}

item set 47 
expr -> expr LE expr .
expr -> expr .+ expr
expr -> expr .- expr
expr -> expr .* expr
expr -> expr ./ expr
expr -> expr .< expr
expr -> expr .LE expr
expr -> expr .GE expr
expr -> expr .> expr
expr -> expr .EQ expr
expr -> expr .^ expr 
transitions ->  {"+":25,"-":26,"*":27,"/":28,"<":29,"LE":30,"GE":31,">":32,"EQ":33,"^":34}

item set 48 
expr -> expr GE expr .
expr -> expr .+ expr
expr -> expr .- expr
expr -> expr .* expr
expr -> expr ./ expr
expr -> expr .< expr
expr -> expr .LE expr
expr -> expr .GE expr
expr -> expr .> expr
expr -> expr .EQ expr
expr -> expr .^ expr 
transitions ->  {"+":25,"-":26,"*":27,"/":28,"<":29,"LE":30,"GE":31,">":32,"EQ":33,"^":34}

item set 49 
expr -> expr > expr .
expr -> expr .+ expr
expr -> expr .- expr
expr -> expr .* expr
expr -> expr ./ expr
expr -> expr .< expr
expr -> expr .LE expr
expr -> expr .GE expr
expr -> expr .> expr
expr -> expr .EQ expr
expr -> expr .^ expr 
transitions ->  {"+":25,"-":26,"*":27,"/":28,"<":29,"LE":30,"GE":31,">":32,"EQ":33,"^":34}

item set 50 
expr -> expr EQ expr .
expr -> expr .+ expr
expr -> expr .- expr
expr -> expr .* expr
expr -> expr ./ expr
expr -> expr .< expr
expr -> expr .LE expr
expr -> expr .GE expr
expr -> expr .> expr
expr -> expr .EQ expr
expr -> expr .^ expr 
transitions ->  {"+":25,"-":26,"*":27,"/":28,"<":29,"LE":30,"GE":31,">":32,"EQ":33,"^":34}

item set 51 
expr -> expr ^ expr .
expr -> expr .+ expr
expr -> expr .- expr
expr -> expr .* expr
expr -> expr ./ expr
expr -> expr .< expr
expr -> expr .LE expr
expr -> expr .GE expr
expr -> expr .> expr
expr -> expr .EQ expr
expr -> expr .^ expr 
transitions ->  {"+":25,"-":26,"*":27,"/":28,"<":29,"LE":30,"GE":31,">":32,"EQ":33,"^":34}

item set 52 
expr -> id ( args .)
args_nonempty -> args ., expr 
transitions ->  {")":59,",":60}

item set 53 
args -> args_nonempty . 
transitions ->  {}

item set 54 
args_nonempty -> expr .
expr -> expr .+ expr
expr -> expr .- expr
expr -> expr .* expr
expr -> expr ./ expr
expr -> expr .< expr
expr -> expr .LE expr
expr -> expr .GE expr
expr -> expr .> expr
expr -> expr .EQ expr
expr -> expr .^ expr 
transitions ->  {"+":25,"-":26,"*":27,"/":28,"<":29,"LE":30,"GE":31,">":32,"EQ":33,"^":34}

item set 55 
var -> VAR id = expr .
expr -> expr .+ expr
expr -> expr .- expr
expr -> expr .* expr
expr -> expr ./ expr
expr -> expr .< expr
expr -> expr .LE expr
expr -> expr .GE expr
expr -> expr .> expr
expr -> expr .EQ expr
expr -> expr .^ expr 
transitions ->  {"+":25,"-":26,"*":27,"/":28,"<":29,"LE":30,"GE":31,">":32,"EQ":33,"^":34}

item set 56 
function -> FUNCTION id ( params .) { body } 
transitions ->  {")":61}

item set 57 
params -> params_nonempty .
params_nonempty -> params_nonempty ., id 
transitions ->  {",":62}

item set 58 
params_nonempty -> id . 
transitions ->  {}

item set 59 
expr -> id ( args ) . 
transitions ->  {}

item set 60 
args_nonempty -> args , .expr
expr -> .id ( args )
expr -> .expr + expr
expr -> .expr - expr
expr -> .expr * expr
expr -> .expr / expr
expr -> .expr < expr
expr -> .expr LE expr
expr -> .expr GE expr
expr -> .expr > expr
expr -> .expr EQ expr
expr -> .expr ^ expr
expr -> .- expr
expr -> .INT_CONST
expr -> .BOOL_CONST
expr -> .STR_CONST
expr -> .id
id -> .ID 
transitions ->  {"expr":63,"id":11,"-":12,"INT_CONST":13,"BOOL_CONST":14,"STR_CONST":15,"ID":16}

item set 61 
function -> FUNCTION id ( params ) .{ body } 
transitions ->  {"{":64}

item set 62 
params_nonempty -> params_nonempty , .id
id -> .ID 
transitions ->  {"id":65,"ID":16}

item set 63 
args_nonempty -> args , expr .
expr -> expr .+ expr
expr -> expr .- expr
expr -> expr .* expr
expr -> expr ./ expr
expr -> expr .< expr
expr -> expr .LE expr
expr -> expr .GE expr
expr -> expr .> expr
expr -> expr .EQ expr
expr -> expr .^ expr 
transitions ->  {"+":25,"-":26,"*":27,"/":28,"<":29,"LE":30,"GE":31,">":32,"EQ":33,"^":34}

item set 64 
function -> FUNCTION id ( params ) { .body }
body -> .var ;
body -> .body var ;
body -> .error ;
body -> .function
body -> .body function
body -> .expr_stmt ;
body -> .body expr_stmt ;
var -> .VAR id = expr
function -> .FUNCTION id ( params ) { body }
expr_stmt -> .
expr_stmt -> .expr
expr_stmt -> .RETURN expr
expr -> .id ( args )
expr -> .expr + expr
expr -> .expr - expr
expr -> .expr * expr
expr -> .expr / expr
expr -> .expr < expr
expr -> .expr LE expr
expr -> .expr GE expr
expr -> .expr > expr
expr -> .expr EQ expr
expr -> .expr ^ expr
expr -> .- expr
expr -> .INT_CONST
expr -> .BOOL_CONST
expr -> .STR_CONST
expr -> .id
id -> .ID 
transitions ->  {"body":66,"var":3,"error":4,"function":5,"expr_stmt":6,"VAR":7,"FUNCTION":8,"expr":9,"RETURN":10,"id":11,"-":12,"INT_CONST":13,"BOOL_CONST":14,"STR_CONST":15,"ID":16}

item set 65 
params_nonempty -> params_nonempty , id . 
transitions ->  {}

item set 66 
function -> FUNCTION id ( params ) { body .}
body -> body .var ;
body -> body .function
body -> body .expr_stmt ;
var -> .VAR id = expr
function -> .FUNCTION id ( params ) { body }
expr_stmt -> .
expr_stmt -> .expr
expr_stmt -> .RETURN expr
expr -> .id ( args )
expr -> .expr + expr
expr -> .expr - expr
expr -> .expr * expr
expr -> .expr / expr
expr -> .expr < expr
expr -> .expr LE expr
expr -> .expr GE expr
expr -> .expr > expr
expr -> .expr EQ expr
expr -> .expr ^ expr
expr -> .- expr
expr -> .INT_CONST
expr -> .BOOL_CONST
expr -> .STR_CONST
expr -> .id
id -> .ID 
transitions ->  {"}":67,"var":17,"function":18,"expr_stmt":19,"VAR":7,"FUNCTION":8,"expr":9,"RETURN":10,"id":11,"-":12,"INT_CONST":13,"BOOL_CONST":14,"STR_CONST":15,"ID":16}

item set 67 
function -> FUNCTION id ( params ) { body } . 
transitions ->  {}
68 states.
Building lookahead grammar.
Computing lookaheads.
Building parse table.
Done.
